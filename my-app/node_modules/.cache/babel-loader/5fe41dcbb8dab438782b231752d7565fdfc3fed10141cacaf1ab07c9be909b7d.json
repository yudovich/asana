{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\asana\\\\my-app\\\\src\\\\tasklist.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Asana = require('asana');\nconst date = new Date();\nvar objJson = [{\n  adName: \"AdName 1\"\n}, {\n  adName: \"AdName 2\"\n}];\nlet client = Asana.ApiClient.instance;\nlet token = client.authentications['token'];\ntoken.accessToken = '2/1207153187462584/1207160651338176:ae47e627318906c853675585bb006e95';\nlet tasksApiInstance = new Asana.TasksApi();\nlet opts = {\n  'limit': 5,\n  //'offset': \"\", \n  //'assignee': \"14641\", \n  'project': \"1207158378702041\",\n  //'section': \"321654\", \n  //'workspace': \"321654\", \n  'completed_since': date,\n  //'modified_since': \"2012-02-22T02:06:58.158Z\", \n  'opt_fields': \"name,due_on\"\n  //'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\n};\ntasksApiInstance.getTasks(opts).then(result => {\n  //console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));\n  objJson = result.data;\n}, error => {\n  console.error(error.response.body);\n});\nconst TaskList = () => {\n  //const [tasks,setTasks] = useState(JSON.stringify(objJson,null,2))\n  const tasks = JSON.stringify(objJson, null, 2);\n  // Define state to hold the list of tasks\n  /*const [tasks, setTasks] = useState([\r\n    { id: 1, title: 'Task 1', completed: false },\r\n    { id: 2, title: 'Task 2', completed: true },\r\n    { id: 3, title: 'Task 3', completed: false }\r\n  ]);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task =>\n      /*#__PURE__*/\n      //<li key={task.id}>\n      _jsxDEV(\"li\", {\n        children: [task.gid, task.due_on]\n      }, task.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Asana","require","date","Date","objJson","adName","client","ApiClient","instance","token","authentications","accessToken","tasksApiInstance","TasksApi","opts","getTasks","then","result","data","error","console","response","body","TaskList","tasks","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","gid","due_on","name","_c","$RefreshReg$"],"sources":["D:/Work/asana/my-app/src/tasklist.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Asana = require('asana');\r\nconst date = new Date();\r\nvar objJson = [\r\n  { adName: \"AdName 1\"},\r\n  { adName: \"AdName 2\"}\r\n];\r\n\r\nlet client = Asana.ApiClient.instance;\r\nlet token = client.authentications['token'];\r\ntoken.accessToken = '2/1207153187462584/1207160651338176:ae47e627318906c853675585bb006e95';\r\n\r\nlet tasksApiInstance = new Asana.TasksApi();\r\nlet opts = { \r\n    'limit': 5, \r\n    //'offset': \"\", \r\n    //'assignee': \"14641\", \r\n    'project': \"1207158378702041\", \r\n    //'section': \"321654\", \r\n    //'workspace': \"321654\", \r\n    'completed_since': date,\r\n    //'modified_since': \"2012-02-22T02:06:58.158Z\", \r\n    'opt_fields': \"name,due_on\"\r\n    //'opt_fields': \"actual_time_minutes,approval_status,assignee,assignee.name,assignee_section,assignee_section.name,assignee_status,completed,completed_at,completed_by,completed_by.name,created_at,created_by,custom_fields,custom_fields.asana_created_field,custom_fields.created_by,custom_fields.created_by.name,custom_fields.currency_code,custom_fields.custom_label,custom_fields.custom_label_position,custom_fields.date_value,custom_fields.date_value.date,custom_fields.date_value.date_time,custom_fields.description,custom_fields.display_value,custom_fields.enabled,custom_fields.enum_options,custom_fields.enum_options.color,custom_fields.enum_options.enabled,custom_fields.enum_options.name,custom_fields.enum_value,custom_fields.enum_value.color,custom_fields.enum_value.enabled,custom_fields.enum_value.name,custom_fields.format,custom_fields.has_notifications_enabled,custom_fields.id_prefix,custom_fields.is_formula_field,custom_fields.is_global_to_workspace,custom_fields.is_value_read_only,custom_fields.multi_enum_values,custom_fields.multi_enum_values.color,custom_fields.multi_enum_values.enabled,custom_fields.multi_enum_values.name,custom_fields.name,custom_fields.number_value,custom_fields.people_value,custom_fields.people_value.name,custom_fields.precision,custom_fields.representation_type,custom_fields.resource_subtype,custom_fields.text_value,custom_fields.type,dependencies,dependents,due_at,due_on,external,external.data,followers,followers.name,hearted,hearts,hearts.user,hearts.user.name,html_notes,is_rendered_as_separator,liked,likes,likes.user,likes.user.name,memberships,memberships.project,memberships.project.name,memberships.section,memberships.section.name,modified_at,name,notes,num_hearts,num_likes,num_subtasks,offset,parent,parent.created_by,parent.name,parent.resource_subtype,path,permalink_url,projects,projects.name,resource_subtype,start_at,start_on,tags,tags.name,uri,workspace,workspace.name\"\r\n};\r\ntasksApiInstance.getTasks(opts).then((result) => {\r\n    //console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));\r\n    objJson = result.data\r\n  }, (error) => {\r\n    console.error(error.response.body);\r\n});\r\n\r\n\r\nconst TaskList = () => {\r\n  //const [tasks,setTasks] = useState(JSON.stringify(objJson,null,2))\r\n  const tasks = JSON.stringify(objJson,null,2)\r\n  // Define state to hold the list of tasks\r\n  /*const [tasks, setTasks] = useState([\r\n    { id: 1, title: 'Task 1', completed: false },\r\n    { id: 2, title: 'Task 2', completed: true },\r\n    { id: 3, title: 'Task 3', completed: false }\r\n  ]);*/\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task List</h1>\r\n      <ul>\r\n        {/* Map over the tasks array and render each task */}\r\n        {tasks.map(task => (\r\n          //<li key={task.id}>\r\n            <li key={task.name}>\r\n            {/* Display the task title */}\r\n            {task.gid}\r\n            {task.due_on}\r\n            {/* Optionally display a completion status */}\r\n            {/*task.completed ? <span> (Completed)</span> : null*/}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;AACvB,IAAIC,OAAO,GAAG,CACZ;EAAEC,MAAM,EAAE;AAAU,CAAC,EACrB;EAAEA,MAAM,EAAE;AAAU,CAAC,CACtB;AAED,IAAIC,MAAM,GAAGN,KAAK,CAACO,SAAS,CAACC,QAAQ;AACrC,IAAIC,KAAK,GAAGH,MAAM,CAACI,eAAe,CAAC,OAAO,CAAC;AAC3CD,KAAK,CAACE,WAAW,GAAG,sEAAsE;AAE1F,IAAIC,gBAAgB,GAAG,IAAIZ,KAAK,CAACa,QAAQ,CAAC,CAAC;AAC3C,IAAIC,IAAI,GAAG;EACP,OAAO,EAAE,CAAC;EACV;EACA;EACA,SAAS,EAAE,kBAAkB;EAC7B;EACA;EACA,iBAAiB,EAAEZ,IAAI;EACvB;EACA,YAAY,EAAE;EACd;AACJ,CAAC;AACDU,gBAAgB,CAACG,QAAQ,CAACD,IAAI,CAAC,CAACE,IAAI,CAAEC,MAAM,IAAK;EAC7C;EACAb,OAAO,GAAGa,MAAM,CAACC,IAAI;AACvB,CAAC,EAAGC,KAAK,IAAK;EACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC,CAAC;AAGF,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB;EACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACtB,OAAO,EAAC,IAAI,EAAC,CAAC,CAAC;EAC5C;EACA;AACF;AACA;AACA;AACA;;EAEE,oBACEL,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhC,OAAA;MAAA4B,QAAA,EAEGH,KAAK,CAACQ,GAAG,CAACC,IAAI;MAAA;MACb;MACElC,OAAA;QAAA4B,QAAA,GAECM,IAAI,CAACC,GAAG,EACRD,IAAI,CAACE,MAAM;MAAA,GAHHF,IAAI,CAACG,IAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GA5BId,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}