{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiClient = void 0;\nvar _superagent = _interopRequireDefault(require(\"superagent\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /*\n  * Asana\n  * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n  *\n  * OpenAPI spec version: 1.0\n  *\n  * NOTE: This class is auto generated by the swagger code generator program.\n  * https://github.com/swagger-api/swagger-codegen.git\n  *\n  * Swagger Codegen version: 3.0.54\n  *\n  * Do not edit the class manually.\n  *\n  */\n/**\n* @module ApiClient\n* @version 3.0.4\n*/\n/**\n* Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n* application to use this class directly - the *Api and model classes provide the public API for the service. The\n* contents of this file should be regarded as internal but are documented for completeness.\n* @alias module:ApiClient\n* @class\n*/\nvar ApiClient = exports.ApiClient = /*#__PURE__*/function () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://app.asana.com/api/1.0\n     */\n    this.basePath = 'https://app.asana.com/api/1.0'.replace(/\\/+$/, '');\n    this.RETURN_COLLECTION = true;\n\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n    this.authentications = {\n      // Add an option to support bearer OAS security definition\n      'token': {\n        type: 'personalAccessToken'\n      }\n    };\n\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n    this.defaultHeaders = {};\n\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n    this.timeout = 60000;\n\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n    this.cache = true;\n\n    /**\n     * If set to true, the client will save the cookies from each server\n     * response, and return them in the next request.\n     * @default false\n     */\n    this.enableCookies = false;\n\n    /*\n     * Used to save and return cookies in a node.js (non-browser) setting,\n     * if this.enableCookies is set to true.\n     */\n    if (typeof window === 'undefined') {\n      this.agent = new _superagent[\"default\"].agent();\n    }\n\n    /*\n     * Allow user to override superagent agent\n     */\n    this.requestAgent = null;\n  }\n\n  /**\n  * Returns a string representation for an actual parameter.\n  * @param param The actual parameter.\n  * @returns {String} The string representation of <code>param</code>.\n  */\n  return _createClass(ApiClient, [{\n    key: \"paramToString\",\n    value: function paramToString(param) {\n      if (param == undefined || param == null) {\n        return '';\n      }\n      if (param instanceof Date) {\n        return param.toJSON();\n      }\n      return param.toString();\n    }\n\n    /**\n    * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n    * NOTE: query parameters are not handled here.\n    * @param {String} path The path to append to the base URL.\n    * @param {Object} pathParams The parameter values to append.\n    * @returns {String} The encoded path with parameter values substituted.\n    */\n  }, {\n    key: \"buildUrl\",\n    value: function buildUrl(path, pathParams) {\n      var _this = this;\n      if (!path.match(/^\\//)) {\n        path = '/' + path;\n      }\n      var url = this.basePath + path;\n      url = url.replace(/\\{([\\w-]+)\\}/g, function (fullMatch, key) {\n        var value;\n        if (pathParams.hasOwnProperty(key)) {\n          value = _this.paramToString(pathParams[key]);\n        } else {\n          value = fullMatch;\n        }\n        return encodeURIComponent(value);\n      });\n      return url;\n    }\n\n    /**\n    * Checks whether the given content type represents JSON.<br>\n    * JSON content type examples:<br>\n    * <ul>\n    * <li>application/json</li>\n    * <li>application/json; charset=UTF8</li>\n    * <li>APPLICATION/JSON</li>\n    * </ul>\n    * @param {String} contentType The MIME content type to check.\n    * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n    */\n  }, {\n    key: \"isJsonMime\",\n    value: function isJsonMime(contentType) {\n      return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n    }\n\n    /**\n    * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n    * @param {Array.<String>} contentTypes\n    * @returns {String} The chosen content type, preferring JSON.\n    */\n  }, {\n    key: \"jsonPreferredMime\",\n    value: function jsonPreferredMime(contentTypes) {\n      for (var i = 0; i < contentTypes.length; i++) {\n        if (this.isJsonMime(contentTypes[i])) {\n          return contentTypes[i];\n        }\n      }\n      return contentTypes[0];\n    }\n\n    /**\n    * Checks whether the given parameter value represents file-like content.\n    * @param param The parameter to check.\n    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n    */\n  }, {\n    key: \"isFileParam\",\n    value: function isFileParam(param) {\n      // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n      if (typeof require === 'function') {\n        var fs;\n        try {\n          fs = require('fs');\n        } catch (err) {}\n        if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n          return true;\n        }\n      }\n\n      // Buffer in Node.js\n      if (typeof Buffer === 'function' && param instanceof Buffer) {\n        return true;\n      }\n\n      // Blob in browser\n      if (typeof Blob === 'function' && param instanceof Blob) {\n        return true;\n      }\n\n      // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n      if (typeof File === 'function' && param instanceof File) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n    * Normalizes parameter values:\n    * <ul>\n    * <li>remove nils</li>\n    * <li>keep files and arrays</li>\n    * <li>format to string with `paramToString` for other cases</li>\n    * </ul>\n    * @param {Object.<String, Object>} params The parameters as object properties.\n    * @returns {Object.<String, Object>} normalized parameters.\n    */\n  }, {\n    key: \"normalizeParams\",\n    value: function normalizeParams(params) {\n      var newParams = {};\n      for (var key in params) {\n        if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n          var value = params[key];\n          if (this.isFileParam(value) || Array.isArray(value)) {\n            newParams[key] = value;\n          } else {\n            newParams[key] = this.paramToString(value);\n          }\n        }\n      }\n      return newParams;\n    }\n\n    /**\n    * Enumeration of collection format separator strategies.\n    * @enum {String}\n    * @readonly\n    */\n  }, {\n    key: \"buildCollectionParam\",\n    value:\n    /**\n    * Builds a string representation of an array-type actual parameter, according to the given collection format.\n    * @param {Array} param An array parameter.\n    * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n    * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n    * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n    */\n    function buildCollectionParam(param, collectionFormat) {\n      if (param == null) {\n        return null;\n      }\n      switch (collectionFormat) {\n        case 'csv':\n          return param.map(this.paramToString).join(',');\n        case 'ssv':\n          return param.map(this.paramToString).join(' ');\n        case 'tsv':\n          return param.map(this.paramToString).join('\\t');\n        case 'pipes':\n          return param.map(this.paramToString).join('|');\n        case 'multi':\n          //return the array directly as SuperAgent will handle it as expected\n          return param.map(this.paramToString);\n        default:\n          throw new Error('Unknown collection format: ' + collectionFormat);\n      }\n    }\n\n    /**\n    * Applies authentication headers to the request.\n    * @param {Object} request The request object created by a <code>superagent()</code> call.\n    * @param {Array.<String>} authNames An array of authentication method names.\n    */\n  }, {\n    key: \"applyAuthToRequest\",\n    value: function applyAuthToRequest(request, authNames) {\n      var _this2 = this;\n      authNames.forEach(function (authName) {\n        // We named the bearer auth in our OAS as \"personalAccessToken\".\n        // This logic is here because we want to change client.authentications['personalAccessToken'] -> client.authentications['token']\n        // This makes it so that we don't have to change the name \"personalAccessToken\" -> \"token\" in the OAS or\n        // makes us need to modify the api.mustache template to pass in \"token\" in authNames\n        var auth = {};\n        if (authName === \"personalAccessToken\") {\n          auth = _this2.authentications[\"token\"];\n        } else {\n          auth = _this2.authentications[authName];\n        }\n        switch (auth.type) {\n          case 'basic':\n            if (auth.username || auth.password) {\n              request.auth(auth.username || '', auth.password || '');\n            }\n            break;\n          case 'apiKey':\n            if (auth.apiKey) {\n              var data = {};\n              if (auth.apiKeyPrefix) {\n                data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n              } else {\n                data[auth.name] = auth.apiKey;\n              }\n              if (auth['in'] === 'header') {\n                request.set(data);\n              } else {\n                request.query(data);\n              }\n            }\n            break;\n          case 'oauth2':\n            if (auth.accessToken) {\n              request.set({\n                'Authorization': 'Bearer ' + auth.accessToken\n              });\n            }\n            break;\n          case 'personalAccessToken':\n            if (auth.accessToken) {\n              request.set({\n                'Authorization': 'Bearer ' + auth.accessToken\n              });\n            }\n            break;\n          default:\n            throw new Error('Unknown authentication type: ' + auth.type);\n        }\n      });\n    }\n\n    /**\n    * Deserializes an HTTP response body into a value of the specified type.\n    * @param {Object} response A SuperAgent response object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns A value of the specified type.\n    */\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(response, returnType) {\n      if (response == null || returnType == null || response.status == 204) {\n        return null;\n      }\n\n      // Rely on SuperAgent for parsing response body.\n      // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n      var data = response.body;\n      if (data == null || _typeof(data) === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length) {\n        // SuperAgent does not always produce a body; use the unparsed response as a fallback\n        data = response.text;\n      }\n      return ApiClient.convertToType(data, returnType);\n    }\n\n    /**\n    * Invokes the REST service using the supplied settings and parameters.\n    * @param {String} path The base URL to invoke.\n    * @param {String} httpMethod The HTTP method to use.\n    * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n    * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n    * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n    * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n    * @param {Object} bodyParam The value to pass as the request body.\n    * @param {Array.<String>} authNames An array of authentication type names.\n    * @param {Array.<String>} contentTypes An array of request MIME types.\n    * @param {Array.<String>} accepts An array of acceptable response MIME types.\n    * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n    * constructor for a complex type.\n    * @returns {Promise} A {@link https://www.promisejs.org/|Promise} object.\n    */\n  }, {\n    key: \"callApi\",\n    value: function callApi(path, httpMethod, pathParams, queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts, returnType) {\n      var _this3 = this;\n      var url = this.buildUrl(path, pathParams);\n      var request = (0, _superagent[\"default\"])(httpMethod, url);\n\n      // apply authentications\n      this.applyAuthToRequest(request, authNames);\n\n      // set query parameters\n      if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n      }\n      request.query(this.normalizeParams(queryParams));\n\n      // set header parameters\n      if (typeof navigator === 'undefined' || typeof window === 'undefined') {\n        headerParams['X-Asana-Client-Lib'] = new URLSearchParams({\n          'version': \"3.0.4\",\n          'language': 'NodeJS',\n          'language_version': process.version,\n          'os': process.platform\n        }).toString();\n      } else {\n        headerParams['X-Asana-Client-Lib'] = new URLSearchParams({\n          'version': \"3.0.4\",\n          'language': 'BrowserJS'\n        }).toString();\n      }\n      request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n      // set requestAgent if it is set by user\n      if (this.requestAgent) {\n        request.agent(this.requestAgent);\n      }\n\n      // set request timeout\n      request.timeout(this.timeout);\n      var contentType = this.jsonPreferredMime(contentTypes);\n      if (contentType) {\n        // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n        if (contentType != 'multipart/form-data') {\n          request.type(contentType);\n        }\n      } else if (!request.header['Content-Type']) {\n        request.type('application/json');\n      }\n      if (contentType === 'application/x-www-form-urlencoded') {\n        request.send(new URLSearchParams(this.normalizeParams(formParams)).toString());\n      } else if (contentType == 'multipart/form-data') {\n        var _formParams = this.normalizeParams(formParams);\n        for (var key in _formParams) {\n          if (_formParams.hasOwnProperty(key)) {\n            if (this.isFileParam(_formParams[key])) {\n              // file field\n              request.attach(key, _formParams[key]);\n            } else {\n              request.field(key, _formParams[key]);\n            }\n          }\n        }\n      } else if (bodyParam) {\n        // Some Asana resources (EX: Projects, ProjectTemplates) contain a \"public\" property which is a JavaScript reserved word.\n        // Because of this, the generator adds a \"_\" prefix to properties that is in the reserved words list: https://github.com/swagger-api/swagger-codegen-generators/blob/v1.0.42/src/main/java/io/swagger/codegen/v3/generators/javascript/JavaScriptClientCodegen.java#L134-L153\n        // We need to remove this \"_prefix\" before sending the request to the Asana API because it will not throw an error for \"_public\" property in the request body.\n        if (bodyParam.data.hasOwnProperty(\"_public\")) {\n          bodyParam.data['public'] = bodyParam.data['_public'];\n          delete bodyParam.data['_public'];\n        }\n        request.send(bodyParam);\n      }\n      var accept = this.jsonPreferredMime(accepts);\n      if (accept) {\n        request.accept(accept);\n      }\n\n      // Attach previously saved cookies, if enabled\n      if (this.enableCookies) {\n        if (typeof window === 'undefined') {\n          this.agent.attachCookies(request);\n        } else {\n          request.withCredentials();\n        }\n      }\n      return new Promise(function (resolve, reject) {\n        request.end(function (error, response) {\n          if (error) {\n            reject(error);\n          } else {\n            try {\n              var data = _this3.deserialize(response, returnType);\n              if (_this3.enableCookies && typeof window === 'undefined') {\n                _this3.agent.saveCookies(response);\n              }\n              resolve({\n                data: data,\n                response: response\n              });\n            } catch (err) {\n              reject(err);\n            }\n          }\n        });\n      });\n    }\n\n    /**\n    * Parses an ISO-8601 string representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n  }], [{\n    key: \"parseDate\",\n    value: function parseDate(str) {\n      return new Date(str);\n    }\n\n    /**\n    * Converts a value to the specified type.\n    * @param {(String|Object)} data The data to convert, as a string or object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns An instance of the specified type or null or undefined if data is null or undefined.\n    */\n  }, {\n    key: \"convertToType\",\n    value: function convertToType(data, type) {\n      if (data === null || data === undefined) return data;\n      switch (type) {\n        case 'Boolean':\n          return Boolean(data);\n        case 'Integer':\n          return parseInt(data, 10);\n        case 'Number':\n          return parseFloat(data);\n        case 'String':\n          return String(data);\n        case 'Date':\n          return ApiClient.parseDate(String(data));\n        case 'Blob':\n          return data;\n        default:\n          if (type === Object) {\n            // generic object, return directly\n            return data;\n          } else if (typeof type === 'function') {\n            // for model type like: User\n            return type.constructFromObject(data);\n          } else if (Array.isArray(type)) {\n            // for array type like: ['String']\n            var itemType = type[0];\n            return data.map(function (item) {\n              return ApiClient.convertToType(item, itemType);\n            });\n          } else if (_typeof(type) === 'object') {\n            // for plain object type like: {'String': 'Integer'}\n            var keyType, valueType;\n            for (var k in type) {\n              if (type.hasOwnProperty(k)) {\n                keyType = k;\n                valueType = type[k];\n                break;\n              }\n            }\n            var result = {};\n            for (var k in data) {\n              if (data.hasOwnProperty(k)) {\n                var key = ApiClient.convertToType(k, keyType);\n                var value = ApiClient.convertToType(data[k], valueType);\n                result[key] = value;\n              }\n            }\n            return result;\n          } else {\n            // for unknown type, return the data directly\n            return data;\n          }\n      }\n    }\n\n    /**\n    * Constructs a new map or array model from REST data.\n    * @param data {Object|Array} The REST data.\n    * @param obj {Object|Array} The target object or array.\n    */\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj, itemType) {\n      if (Array.isArray(data)) {\n        for (var i = 0; i < data.length; i++) {\n          if (data.hasOwnProperty(i)) obj[i] = ApiClient.convertToType(data[i], itemType);\n        }\n      } else {\n        for (var k in data) {\n          if (data.hasOwnProperty(k)) obj[k] = ApiClient.convertToType(data[k], itemType);\n        }\n      }\n    }\n  }]);\n}();\n/**\n* The default API client implementation.\n* @type {module:ApiClient}\n*/\n_defineProperty(ApiClient, \"CollectionFormatEnum\", {\n  /**\n   * Comma-separated values. Value: <code>csv</code>\n   * @const\n   */\n  CSV: ',',\n  /**\n   * Space-separated values. Value: <code>ssv</code>\n   * @const\n   */\n  SSV: ' ',\n  /**\n   * Tab-separated values. Value: <code>tsv</code>\n   * @const\n   */\n  TSV: '\\t',\n  /**\n   * Pipe(|)-separated values. Value: <code>pipes</code>\n   * @const\n   */\n  PIPES: '|',\n  /**\n   * Native array. Value: <code>multi</code>\n   * @const\n   */\n  MULTI: 'multi'\n});\nApiClient.instance = new ApiClient();","map":{"version":3,"names":["Object","defineProperty","exports","value","ApiClient","_superagent","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","t","_toPrimitive","r","e","toPrimitive","call","String","Number","basePath","replace","RETURN_COLLECTION","authentications","type","defaultHeaders","timeout","cache","enableCookies","window","agent","requestAgent","paramToString","param","undefined","Date","toJSON","toString","buildUrl","path","pathParams","_this","match","url","fullMatch","hasOwnProperty","encodeURIComponent","isJsonMime","contentType","Boolean","jsonPreferredMime","contentTypes","isFileParam","fs","err","ReadStream","Buffer","Blob","File","normalizeParams","params","newParams","Array","isArray","buildCollectionParam","collectionFormat","map","join","Error","applyAuthToRequest","request","authNames","_this2","forEach","authName","auth","username","password","apiKey","data","apiKeyPrefix","name","set","query","accessToken","deserialize","response","returnType","status","body","keys","text","convertToType","callApi","httpMethod","queryParams","headerParams","formParams","bodyParam","accepts","_this3","toUpperCase","getTime","navigator","URLSearchParams","process","version","platform","header","send","_formParams","attach","field","accept","attachCookies","withCredentials","Promise","resolve","reject","end","error","saveCookies","parseDate","str","parseInt","parseFloat","constructFromObject","itemType","item","keyType","valueType","k","result","CSV","SSV","TSV","PIPES","MULTI"],"sources":["D:/Work/asana/node_modules/asana/dist/ApiClient.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiClient = void 0;\nvar _superagent = _interopRequireDefault(require(\"superagent\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * Asana\n * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n *\n * OpenAPI spec version: 1.0\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 3.0.54\n *\n * Do not edit the class manually.\n *\n */\n/**\n* @module ApiClient\n* @version 3.0.4\n*/\n/**\n* Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n* application to use this class directly - the *Api and model classes provide the public API for the service. The\n* contents of this file should be regarded as internal but are documented for completeness.\n* @alias module:ApiClient\n* @class\n*/\nvar ApiClient = exports.ApiClient = /*#__PURE__*/function () {\n  function ApiClient() {\n    _classCallCheck(this, ApiClient);\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://app.asana.com/api/1.0\n     */\n    this.basePath = 'https://app.asana.com/api/1.0'.replace(/\\/+$/, '');\n    this.RETURN_COLLECTION = true;\n\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n    this.authentications = {\n      // Add an option to support bearer OAS security definition\n      'token': {\n        type: 'personalAccessToken'\n      }\n    };\n\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n    this.defaultHeaders = {};\n\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n    this.timeout = 60000;\n\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n    this.cache = true;\n\n    /**\n     * If set to true, the client will save the cookies from each server\n     * response, and return them in the next request.\n     * @default false\n     */\n    this.enableCookies = false;\n\n    /*\n     * Used to save and return cookies in a node.js (non-browser) setting,\n     * if this.enableCookies is set to true.\n     */\n    if (typeof window === 'undefined') {\n      this.agent = new _superagent[\"default\"].agent();\n    }\n\n    /*\n     * Allow user to override superagent agent\n     */\n    this.requestAgent = null;\n  }\n\n  /**\n  * Returns a string representation for an actual parameter.\n  * @param param The actual parameter.\n  * @returns {String} The string representation of <code>param</code>.\n  */\n  return _createClass(ApiClient, [{\n    key: \"paramToString\",\n    value: function paramToString(param) {\n      if (param == undefined || param == null) {\n        return '';\n      }\n      if (param instanceof Date) {\n        return param.toJSON();\n      }\n      return param.toString();\n    }\n\n    /**\n    * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n    * NOTE: query parameters are not handled here.\n    * @param {String} path The path to append to the base URL.\n    * @param {Object} pathParams The parameter values to append.\n    * @returns {String} The encoded path with parameter values substituted.\n    */\n  }, {\n    key: \"buildUrl\",\n    value: function buildUrl(path, pathParams) {\n      var _this = this;\n      if (!path.match(/^\\//)) {\n        path = '/' + path;\n      }\n      var url = this.basePath + path;\n      url = url.replace(/\\{([\\w-]+)\\}/g, function (fullMatch, key) {\n        var value;\n        if (pathParams.hasOwnProperty(key)) {\n          value = _this.paramToString(pathParams[key]);\n        } else {\n          value = fullMatch;\n        }\n        return encodeURIComponent(value);\n      });\n      return url;\n    }\n\n    /**\n    * Checks whether the given content type represents JSON.<br>\n    * JSON content type examples:<br>\n    * <ul>\n    * <li>application/json</li>\n    * <li>application/json; charset=UTF8</li>\n    * <li>APPLICATION/JSON</li>\n    * </ul>\n    * @param {String} contentType The MIME content type to check.\n    * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n    */\n  }, {\n    key: \"isJsonMime\",\n    value: function isJsonMime(contentType) {\n      return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n    }\n\n    /**\n    * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n    * @param {Array.<String>} contentTypes\n    * @returns {String} The chosen content type, preferring JSON.\n    */\n  }, {\n    key: \"jsonPreferredMime\",\n    value: function jsonPreferredMime(contentTypes) {\n      for (var i = 0; i < contentTypes.length; i++) {\n        if (this.isJsonMime(contentTypes[i])) {\n          return contentTypes[i];\n        }\n      }\n      return contentTypes[0];\n    }\n\n    /**\n    * Checks whether the given parameter value represents file-like content.\n    * @param param The parameter to check.\n    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n    */\n  }, {\n    key: \"isFileParam\",\n    value: function isFileParam(param) {\n      // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n      if (typeof require === 'function') {\n        var fs;\n        try {\n          fs = require('fs');\n        } catch (err) {}\n        if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n          return true;\n        }\n      }\n\n      // Buffer in Node.js\n      if (typeof Buffer === 'function' && param instanceof Buffer) {\n        return true;\n      }\n\n      // Blob in browser\n      if (typeof Blob === 'function' && param instanceof Blob) {\n        return true;\n      }\n\n      // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n      if (typeof File === 'function' && param instanceof File) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n    * Normalizes parameter values:\n    * <ul>\n    * <li>remove nils</li>\n    * <li>keep files and arrays</li>\n    * <li>format to string with `paramToString` for other cases</li>\n    * </ul>\n    * @param {Object.<String, Object>} params The parameters as object properties.\n    * @returns {Object.<String, Object>} normalized parameters.\n    */\n  }, {\n    key: \"normalizeParams\",\n    value: function normalizeParams(params) {\n      var newParams = {};\n      for (var key in params) {\n        if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n          var value = params[key];\n          if (this.isFileParam(value) || Array.isArray(value)) {\n            newParams[key] = value;\n          } else {\n            newParams[key] = this.paramToString(value);\n          }\n        }\n      }\n      return newParams;\n    }\n\n    /**\n    * Enumeration of collection format separator strategies.\n    * @enum {String}\n    * @readonly\n    */\n  }, {\n    key: \"buildCollectionParam\",\n    value:\n    /**\n    * Builds a string representation of an array-type actual parameter, according to the given collection format.\n    * @param {Array} param An array parameter.\n    * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n    * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n    * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n    */\n    function buildCollectionParam(param, collectionFormat) {\n      if (param == null) {\n        return null;\n      }\n      switch (collectionFormat) {\n        case 'csv':\n          return param.map(this.paramToString).join(',');\n        case 'ssv':\n          return param.map(this.paramToString).join(' ');\n        case 'tsv':\n          return param.map(this.paramToString).join('\\t');\n        case 'pipes':\n          return param.map(this.paramToString).join('|');\n        case 'multi':\n          //return the array directly as SuperAgent will handle it as expected\n          return param.map(this.paramToString);\n        default:\n          throw new Error('Unknown collection format: ' + collectionFormat);\n      }\n    }\n\n    /**\n    * Applies authentication headers to the request.\n    * @param {Object} request The request object created by a <code>superagent()</code> call.\n    * @param {Array.<String>} authNames An array of authentication method names.\n    */\n  }, {\n    key: \"applyAuthToRequest\",\n    value: function applyAuthToRequest(request, authNames) {\n      var _this2 = this;\n      authNames.forEach(function (authName) {\n        // We named the bearer auth in our OAS as \"personalAccessToken\".\n        // This logic is here because we want to change client.authentications['personalAccessToken'] -> client.authentications['token']\n        // This makes it so that we don't have to change the name \"personalAccessToken\" -> \"token\" in the OAS or\n        // makes us need to modify the api.mustache template to pass in \"token\" in authNames\n        var auth = {};\n        if (authName === \"personalAccessToken\") {\n          auth = _this2.authentications[\"token\"];\n        } else {\n          auth = _this2.authentications[authName];\n        }\n        switch (auth.type) {\n          case 'basic':\n            if (auth.username || auth.password) {\n              request.auth(auth.username || '', auth.password || '');\n            }\n            break;\n          case 'apiKey':\n            if (auth.apiKey) {\n              var data = {};\n              if (auth.apiKeyPrefix) {\n                data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n              } else {\n                data[auth.name] = auth.apiKey;\n              }\n              if (auth['in'] === 'header') {\n                request.set(data);\n              } else {\n                request.query(data);\n              }\n            }\n            break;\n          case 'oauth2':\n            if (auth.accessToken) {\n              request.set({\n                'Authorization': 'Bearer ' + auth.accessToken\n              });\n            }\n            break;\n          case 'personalAccessToken':\n            if (auth.accessToken) {\n              request.set({\n                'Authorization': 'Bearer ' + auth.accessToken\n              });\n            }\n            break;\n          default:\n            throw new Error('Unknown authentication type: ' + auth.type);\n        }\n      });\n    }\n\n    /**\n    * Deserializes an HTTP response body into a value of the specified type.\n    * @param {Object} response A SuperAgent response object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns A value of the specified type.\n    */\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(response, returnType) {\n      if (response == null || returnType == null || response.status == 204) {\n        return null;\n      }\n\n      // Rely on SuperAgent for parsing response body.\n      // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n      var data = response.body;\n      if (data == null || _typeof(data) === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length) {\n        // SuperAgent does not always produce a body; use the unparsed response as a fallback\n        data = response.text;\n      }\n      return ApiClient.convertToType(data, returnType);\n    }\n\n    /**\n    * Invokes the REST service using the supplied settings and parameters.\n    * @param {String} path The base URL to invoke.\n    * @param {String} httpMethod The HTTP method to use.\n    * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n    * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n    * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n    * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n    * @param {Object} bodyParam The value to pass as the request body.\n    * @param {Array.<String>} authNames An array of authentication type names.\n    * @param {Array.<String>} contentTypes An array of request MIME types.\n    * @param {Array.<String>} accepts An array of acceptable response MIME types.\n    * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n    * constructor for a complex type.\n    * @returns {Promise} A {@link https://www.promisejs.org/|Promise} object.\n    */\n  }, {\n    key: \"callApi\",\n    value: function callApi(path, httpMethod, pathParams, queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts, returnType) {\n      var _this3 = this;\n      var url = this.buildUrl(path, pathParams);\n      var request = (0, _superagent[\"default\"])(httpMethod, url);\n\n      // apply authentications\n      this.applyAuthToRequest(request, authNames);\n\n      // set query parameters\n      if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n      }\n      request.query(this.normalizeParams(queryParams));\n\n      // set header parameters\n      if (typeof navigator === 'undefined' || typeof window === 'undefined') {\n        headerParams['X-Asana-Client-Lib'] = new URLSearchParams({\n          'version': \"3.0.4\",\n          'language': 'NodeJS',\n          'language_version': process.version,\n          'os': process.platform\n        }).toString();\n      } else {\n        headerParams['X-Asana-Client-Lib'] = new URLSearchParams({\n          'version': \"3.0.4\",\n          'language': 'BrowserJS'\n        }).toString();\n      }\n      request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n      // set requestAgent if it is set by user\n      if (this.requestAgent) {\n        request.agent(this.requestAgent);\n      }\n\n      // set request timeout\n      request.timeout(this.timeout);\n      var contentType = this.jsonPreferredMime(contentTypes);\n      if (contentType) {\n        // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n        if (contentType != 'multipart/form-data') {\n          request.type(contentType);\n        }\n      } else if (!request.header['Content-Type']) {\n        request.type('application/json');\n      }\n      if (contentType === 'application/x-www-form-urlencoded') {\n        request.send(new URLSearchParams(this.normalizeParams(formParams)).toString());\n      } else if (contentType == 'multipart/form-data') {\n        var _formParams = this.normalizeParams(formParams);\n        for (var key in _formParams) {\n          if (_formParams.hasOwnProperty(key)) {\n            if (this.isFileParam(_formParams[key])) {\n              // file field\n              request.attach(key, _formParams[key]);\n            } else {\n              request.field(key, _formParams[key]);\n            }\n          }\n        }\n      } else if (bodyParam) {\n        // Some Asana resources (EX: Projects, ProjectTemplates) contain a \"public\" property which is a JavaScript reserved word.\n        // Because of this, the generator adds a \"_\" prefix to properties that is in the reserved words list: https://github.com/swagger-api/swagger-codegen-generators/blob/v1.0.42/src/main/java/io/swagger/codegen/v3/generators/javascript/JavaScriptClientCodegen.java#L134-L153\n        // We need to remove this \"_prefix\" before sending the request to the Asana API because it will not throw an error for \"_public\" property in the request body.\n        if (bodyParam.data.hasOwnProperty(\"_public\")) {\n          bodyParam.data['public'] = bodyParam.data['_public'];\n          delete bodyParam.data['_public'];\n        }\n        request.send(bodyParam);\n      }\n      var accept = this.jsonPreferredMime(accepts);\n      if (accept) {\n        request.accept(accept);\n      }\n\n      // Attach previously saved cookies, if enabled\n      if (this.enableCookies) {\n        if (typeof window === 'undefined') {\n          this.agent.attachCookies(request);\n        } else {\n          request.withCredentials();\n        }\n      }\n      return new Promise(function (resolve, reject) {\n        request.end(function (error, response) {\n          if (error) {\n            reject(error);\n          } else {\n            try {\n              var data = _this3.deserialize(response, returnType);\n              if (_this3.enableCookies && typeof window === 'undefined') {\n                _this3.agent.saveCookies(response);\n              }\n              resolve({\n                data: data,\n                response: response\n              });\n            } catch (err) {\n              reject(err);\n            }\n          }\n        });\n      });\n    }\n\n    /**\n    * Parses an ISO-8601 string representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n  }], [{\n    key: \"parseDate\",\n    value: function parseDate(str) {\n      return new Date(str);\n    }\n\n    /**\n    * Converts a value to the specified type.\n    * @param {(String|Object)} data The data to convert, as a string or object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns An instance of the specified type or null or undefined if data is null or undefined.\n    */\n  }, {\n    key: \"convertToType\",\n    value: function convertToType(data, type) {\n      if (data === null || data === undefined) return data;\n      switch (type) {\n        case 'Boolean':\n          return Boolean(data);\n        case 'Integer':\n          return parseInt(data, 10);\n        case 'Number':\n          return parseFloat(data);\n        case 'String':\n          return String(data);\n        case 'Date':\n          return ApiClient.parseDate(String(data));\n        case 'Blob':\n          return data;\n        default:\n          if (type === Object) {\n            // generic object, return directly\n            return data;\n          } else if (typeof type === 'function') {\n            // for model type like: User\n            return type.constructFromObject(data);\n          } else if (Array.isArray(type)) {\n            // for array type like: ['String']\n            var itemType = type[0];\n            return data.map(function (item) {\n              return ApiClient.convertToType(item, itemType);\n            });\n          } else if (_typeof(type) === 'object') {\n            // for plain object type like: {'String': 'Integer'}\n            var keyType, valueType;\n            for (var k in type) {\n              if (type.hasOwnProperty(k)) {\n                keyType = k;\n                valueType = type[k];\n                break;\n              }\n            }\n            var result = {};\n            for (var k in data) {\n              if (data.hasOwnProperty(k)) {\n                var key = ApiClient.convertToType(k, keyType);\n                var value = ApiClient.convertToType(data[k], valueType);\n                result[key] = value;\n              }\n            }\n            return result;\n          } else {\n            // for unknown type, return the data directly\n            return data;\n          }\n      }\n    }\n\n    /**\n    * Constructs a new map or array model from REST data.\n    * @param data {Object|Array} The REST data.\n    * @param obj {Object|Array} The target object or array.\n    */\n  }, {\n    key: \"constructFromObject\",\n    value: function constructFromObject(data, obj, itemType) {\n      if (Array.isArray(data)) {\n        for (var i = 0; i < data.length; i++) {\n          if (data.hasOwnProperty(i)) obj[i] = ApiClient.convertToType(data[i], itemType);\n        }\n      } else {\n        for (var k in data) {\n          if (data.hasOwnProperty(k)) obj[k] = ApiClient.convertToType(data[k], itemType);\n        }\n      }\n    }\n  }]);\n}();\n/**\n* The default API client implementation.\n* @type {module:ApiClient}\n*/\n_defineProperty(ApiClient, \"CollectionFormatEnum\", {\n  /**\n   * Comma-separated values. Value: <code>csv</code>\n   * @const\n   */\n  CSV: ',',\n  /**\n   * Space-separated values. Value: <code>ssv</code>\n   * @const\n   */\n  SSV: ' ',\n  /**\n   * Tab-separated values. Value: <code>tsv</code>\n   * @const\n   */\n  TSV: '\\t',\n  /**\n   * Pipe(|)-separated values. Value: <code>pipes</code>\n   * @const\n   */\n  PIPES: '|',\n  /**\n   * Native array. Value: <code>multi</code>\n   * @const\n   */\n  MULTI: 'multi'\n});\nApiClient.instance = new ApiClient();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}