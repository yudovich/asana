{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomFieldsApi = void 0;\nvar _ApiClient = require(\"../ApiClient\");\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /*\n  * Asana\n  * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n  *\n  * OpenAPI spec version: 1.0\n  *\n  * NOTE: This class is auto generated by the swagger code generator program.\n  * https://github.com/swagger-api/swagger-codegen.git\n  *\n  * Swagger Codegen version: 3.0.54\n  *\n  * Do not edit the class manually.\n  *\n  */\nvar Collection = require('../utils/collection');\n\n/**\n* CustomFields service.\n* @module api/CustomFieldsApi\n* @version 3.0.4\n*/\nvar CustomFieldsApi = exports.CustomFieldsApi = /*#__PURE__*/function () {\n  /**\n  * Constructs a new CustomFieldsApi. \n  * @alias module:api/CustomFieldsApi\n  * @class\n  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n  * default to {@link module:ApiClient#instanc\n  e} if unspecified.\n  */\n  function CustomFieldsApi(apiClient) {\n    _classCallCheck(this, CustomFieldsApi);\n    this.apiClient = apiClient || _ApiClient.ApiClient.instance;\n  }\n\n  /**\n   * Create a custom field\n   * Creates a new custom field in a workspace. Every custom field is required to be created in a specific workspace, and this workspace cannot be changed once set.  A custom field’s name must be unique within a workspace and not conflict with names of existing task properties such as &#x60;Due Date&#x60; or &#x60;Assignee&#x60;. A custom field’s type must be one of &#x60;text&#x60;, &#x60;enum&#x60;, &#x60;multi_enum&#x60;, &#x60;number&#x60;, &#x60;date&#x60;, or &#x60;people&#x60;.  Returns the full record of the newly created custom field.\n   * @param {module:model/Object} body The custom field object to create.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n   */\n  return _createClass(CustomFieldsApi, [{\n    key: \"createCustomFieldWithHttpInfo\",\n    value: function createCustomFieldWithHttpInfo(body, opts) {\n      opts = opts || {};\n      var postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling createCustomField\");\n      }\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Create a custom field\n     * Creates a new custom field in a workspace. Every custom field is required to be created in a specific workspace, and this workspace cannot be changed once set.  A custom field’s name must be unique within a workspace and not conflict with names of existing task properties such as &#x60;Due Date&#x60; or &#x60;Assignee&#x60;. A custom field’s type must be one of &#x60;text&#x60;, &#x60;enum&#x60;, &#x60;multi_enum&#x60;, &#x60;number&#x60;, &#x60;date&#x60;, or &#x60;people&#x60;.  Returns the full record of the newly created custom field.\n     * @param {<&vendorExtensions.x-jsdoc-type>} body The custom field object to create.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseData}\n     */\n  }, {\n    key: \"createCustomField\",\n    value: function createCustomField(body, opts) {\n      return this.createCustomFieldWithHttpInfo(body, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Create an enum option\n     * Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list. Locked custom fields can only have enum options added by the user who locked the field. Returns the full record of the newly created enum option.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"createEnumOptionForCustomFieldWithHttpInfo\",\n    value: function createEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling createEnumOptionForCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}/enum_options', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Create an enum option\n     * Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list. Locked custom fields can only have enum options added by the user who locked the field. Returns the full record of the newly created enum option.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EnumOptionData}\n     */\n  }, {\n    key: \"createEnumOptionForCustomField\",\n    value: function createEnumOptionForCustomField(custom_field_gid, opts) {\n      return this.createEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Delete a custom field\n     * A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field. Locked custom fields can only be deleted by the user who locked the field. Returns an empty data record.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"deleteCustomFieldWithHttpInfo\",\n    value: function deleteCustomFieldWithHttpInfo(custom_field_gid) {\n      var postBody = null;\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling deleteCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Delete a custom field\n     * A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field. Locked custom fields can only be deleted by the user who locked the field. Returns an empty data record.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmptyResponseData}\n     */\n  }, {\n    key: \"deleteCustomField\",\n    value: function deleteCustomField(custom_field_gid) {\n      return this.deleteCustomFieldWithHttpInfo(custom_field_gid).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get a custom field\n     * Get the complete definition of a custom field’s metadata.  Since custom fields can be defined for one of a number of types, and these types have different data and behaviors, there are fields that are relevant to a particular type. For instance, as noted above, enum_options is only relevant for the enum type and defines the set of choices that the enum could represent. The examples below show some of these type-specific custom field definitions.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getCustomFieldWithHttpInfo\",\n    value: function getCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling getCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a custom field\n     * Get the complete definition of a custom field’s metadata.  Since custom fields can be defined for one of a number of types, and these types have different data and behaviors, there are fields that are relevant to a particular type. For instance, as noted above, enum_options is only relevant for the enum type and defines the set of choices that the enum could represent. The examples below show some of these type-specific custom field definitions.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseData}\n     */\n  }, {\n    key: \"getCustomField\",\n    value: function getCustomField(custom_field_gid, opts) {\n      return this.getCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get a workspace&#x27;s custom fields\n     * Returns a list of the compact representation of all of the custom fields in a workspace.\n     * @param {String} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getCustomFieldsForWorkspaceWithHttpInfo\",\n    value: function getCustomFieldsForWorkspaceWithHttpInfo(workspace_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'workspace_gid' is set\n      if (workspace_gid === undefined || workspace_gid === null) {\n        throw new Error(\"Missing the required parameter 'workspace_gid' when calling getCustomFieldsForWorkspace\");\n      }\n      var pathParams = {\n        'workspace_gid': workspace_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/workspaces/{workspace_gid}/custom_fields', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/workspaces/{workspace_gid}/custom_fields',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/workspaces/{workspace_gid}/custom_fields', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a workspace&#x27;s custom fields\n     * Returns a list of the compact representation of all of the custom fields in a workspace.\n     * @param {<&vendorExtensions.x-jsdoc-type>} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseArray}\n     */\n  }, {\n    key: \"getCustomFieldsForWorkspace\",\n    value: function getCustomFieldsForWorkspace(workspace_gid, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getCustomFieldsForWorkspaceWithHttpInfo(workspace_gid, opts);\n      }\n      return this.getCustomFieldsForWorkspaceWithHttpInfo(workspace_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Reorder a custom field&#x27;s enum\n     * Moves a particular enum option to be either before or after another specified enum option in the custom field. Locked custom fields can only be reordered by the user who locked the field.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"insertEnumOptionForCustomFieldWithHttpInfo\",\n    value: function insertEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling insertEnumOptionForCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}/enum_options/insert', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Reorder a custom field&#x27;s enum\n     * Moves a particular enum option to be either before or after another specified enum option in the custom field. Locked custom fields can only be reordered by the user who locked the field.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EnumOptionData}\n     */\n  }, {\n    key: \"insertEnumOptionForCustomField\",\n    value: function insertEnumOptionForCustomField(custom_field_gid, opts) {\n      return this.insertEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Update a custom field\n     * A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the &#x60;data&#x60; block will be updated; any unspecified fields will remain unchanged When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field. A custom field’s &#x60;type&#x60; cannot be updated. An enum custom field’s &#x60;enum_options&#x60; cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update &#x60;enum_options&#x60;. Locked custom fields can only be updated by the user who locked the field. Returns the complete updated custom field record.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The custom field object with all updated properties.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"updateCustomFieldWithHttpInfo\",\n    value: function updateCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling updateCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Update a custom field\n     * A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the &#x60;data&#x60; block will be updated; any unspecified fields will remain unchanged When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field. A custom field’s &#x60;type&#x60; cannot be updated. An enum custom field’s &#x60;enum_options&#x60; cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update &#x60;enum_options&#x60;. Locked custom fields can only be updated by the user who locked the field. Returns the complete updated custom field record.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The custom field object with all updated properties.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseData}\n     */\n  }, {\n    key: \"updateCustomField\",\n    value: function updateCustomField(custom_field_gid, opts) {\n      return this.updateCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Update an enum option\n     * Updates an existing enum option. Enum custom fields require at least one enabled enum option. Locked custom fields can only be updated by the user who locked the field. Returns the full record of the updated enum option.\n     * @param {String} enum_option_gid Globally unique identifier for the enum option.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to update\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"updateEnumOptionWithHttpInfo\",\n    value: function updateEnumOptionWithHttpInfo(enum_option_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'enum_option_gid' is set\n      if (enum_option_gid === undefined || enum_option_gid === null) {\n        throw new Error(\"Missing the required parameter 'enum_option_gid' when calling updateEnumOption\");\n      }\n      var pathParams = {\n        'enum_option_gid': enum_option_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/enum_options/{enum_option_gid}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Update an enum option\n     * Updates an existing enum option. Enum custom fields require at least one enabled enum option. Locked custom fields can only be updated by the user who locked the field. Returns the full record of the updated enum option.\n     * @param {<&vendorExtensions.x-jsdoc-type>} enum_option_gid Globally unique identifier for the enum option.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to update\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EnumOptionData}\n     */\n  }, {\n    key: \"updateEnumOption\",\n    value: function updateEnumOption(enum_option_gid, opts) {\n      return this.updateEnumOptionWithHttpInfo(enum_option_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n  }]);\n}();","map":{"version":3,"names":["Object","defineProperty","exports","value","CustomFieldsApi","_ApiClient","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","call","String","Number","Collection","apiClient","ApiClient","createCustomFieldWithHttpInfo","body","opts","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","callApi","createCustomField","then","response_and_data","data","createEnumOptionForCustomFieldWithHttpInfo","custom_field_gid","createEnumOptionForCustomField","deleteCustomFieldWithHttpInfo","deleteCustomField","getCustomFieldWithHttpInfo","getCustomField","getCustomFieldsForWorkspaceWithHttpInfo","workspace_gid","RETURN_COLLECTION","fromApiClient","getCustomFieldsForWorkspace","insertEnumOptionForCustomFieldWithHttpInfo","insertEnumOptionForCustomField","updateCustomFieldWithHttpInfo","updateCustomField","updateEnumOptionWithHttpInfo","enum_option_gid","updateEnumOption"],"sources":["D:/Work/asana/node_modules/asana/dist/api/CustomFieldsApi.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomFieldsApi = void 0;\nvar _ApiClient = require(\"../ApiClient\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * Asana\n * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n *\n * OpenAPI spec version: 1.0\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 3.0.54\n *\n * Do not edit the class manually.\n *\n */\nvar Collection = require('../utils/collection');\n\n/**\n* CustomFields service.\n* @module api/CustomFieldsApi\n* @version 3.0.4\n*/\nvar CustomFieldsApi = exports.CustomFieldsApi = /*#__PURE__*/function () {\n  /**\n  * Constructs a new CustomFieldsApi. \n  * @alias module:api/CustomFieldsApi\n  * @class\n  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n  * default to {@link module:ApiClient#instanc\n  e} if unspecified.\n  */\n  function CustomFieldsApi(apiClient) {\n    _classCallCheck(this, CustomFieldsApi);\n    this.apiClient = apiClient || _ApiClient.ApiClient.instance;\n  }\n\n  /**\n   * Create a custom field\n   * Creates a new custom field in a workspace. Every custom field is required to be created in a specific workspace, and this workspace cannot be changed once set.  A custom field’s name must be unique within a workspace and not conflict with names of existing task properties such as &#x60;Due Date&#x60; or &#x60;Assignee&#x60;. A custom field’s type must be one of &#x60;text&#x60;, &#x60;enum&#x60;, &#x60;multi_enum&#x60;, &#x60;number&#x60;, &#x60;date&#x60;, or &#x60;people&#x60;.  Returns the full record of the newly created custom field.\n   * @param {module:model/Object} body The custom field object to create.\n   * @param {Object} opts Optional parameters\n   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n   */\n  return _createClass(CustomFieldsApi, [{\n    key: \"createCustomFieldWithHttpInfo\",\n    value: function createCustomFieldWithHttpInfo(body, opts) {\n      opts = opts || {};\n      var postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling createCustomField\");\n      }\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Create a custom field\n     * Creates a new custom field in a workspace. Every custom field is required to be created in a specific workspace, and this workspace cannot be changed once set.  A custom field’s name must be unique within a workspace and not conflict with names of existing task properties such as &#x60;Due Date&#x60; or &#x60;Assignee&#x60;. A custom field’s type must be one of &#x60;text&#x60;, &#x60;enum&#x60;, &#x60;multi_enum&#x60;, &#x60;number&#x60;, &#x60;date&#x60;, or &#x60;people&#x60;.  Returns the full record of the newly created custom field.\n     * @param {<&vendorExtensions.x-jsdoc-type>} body The custom field object to create.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseData}\n     */\n  }, {\n    key: \"createCustomField\",\n    value: function createCustomField(body, opts) {\n      return this.createCustomFieldWithHttpInfo(body, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Create an enum option\n     * Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list. Locked custom fields can only have enum options added by the user who locked the field. Returns the full record of the newly created enum option.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"createEnumOptionForCustomFieldWithHttpInfo\",\n    value: function createEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling createEnumOptionForCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}/enum_options', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Create an enum option\n     * Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 500 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list. Locked custom fields can only have enum options added by the user who locked the field. Returns the full record of the newly created enum option.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EnumOptionData}\n     */\n  }, {\n    key: \"createEnumOptionForCustomField\",\n    value: function createEnumOptionForCustomField(custom_field_gid, opts) {\n      return this.createEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Delete a custom field\n     * A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field. Locked custom fields can only be deleted by the user who locked the field. Returns an empty data record.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"deleteCustomFieldWithHttpInfo\",\n    value: function deleteCustomFieldWithHttpInfo(custom_field_gid) {\n      var postBody = null;\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling deleteCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Delete a custom field\n     * A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field. Locked custom fields can only be deleted by the user who locked the field. Returns an empty data record.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmptyResponseData}\n     */\n  }, {\n    key: \"deleteCustomField\",\n    value: function deleteCustomField(custom_field_gid) {\n      return this.deleteCustomFieldWithHttpInfo(custom_field_gid).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get a custom field\n     * Get the complete definition of a custom field’s metadata.  Since custom fields can be defined for one of a number of types, and these types have different data and behaviors, there are fields that are relevant to a particular type. For instance, as noted above, enum_options is only relevant for the enum type and defines the set of choices that the enum could represent. The examples below show some of these type-specific custom field definitions.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getCustomFieldWithHttpInfo\",\n    value: function getCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling getCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a custom field\n     * Get the complete definition of a custom field’s metadata.  Since custom fields can be defined for one of a number of types, and these types have different data and behaviors, there are fields that are relevant to a particular type. For instance, as noted above, enum_options is only relevant for the enum type and defines the set of choices that the enum could represent. The examples below show some of these type-specific custom field definitions.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseData}\n     */\n  }, {\n    key: \"getCustomField\",\n    value: function getCustomField(custom_field_gid, opts) {\n      return this.getCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get a workspace&#x27;s custom fields\n     * Returns a list of the compact representation of all of the custom fields in a workspace.\n     * @param {String} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getCustomFieldsForWorkspaceWithHttpInfo\",\n    value: function getCustomFieldsForWorkspaceWithHttpInfo(workspace_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'workspace_gid' is set\n      if (workspace_gid === undefined || workspace_gid === null) {\n        throw new Error(\"Missing the required parameter 'workspace_gid' when calling getCustomFieldsForWorkspace\");\n      }\n      var pathParams = {\n        'workspace_gid': workspace_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/workspaces/{workspace_gid}/custom_fields', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/workspaces/{workspace_gid}/custom_fields',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/workspaces/{workspace_gid}/custom_fields', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a workspace&#x27;s custom fields\n     * Returns a list of the compact representation of all of the custom fields in a workspace.\n     * @param {<&vendorExtensions.x-jsdoc-type>} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseArray}\n     */\n  }, {\n    key: \"getCustomFieldsForWorkspace\",\n    value: function getCustomFieldsForWorkspace(workspace_gid, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getCustomFieldsForWorkspaceWithHttpInfo(workspace_gid, opts);\n      }\n      return this.getCustomFieldsForWorkspaceWithHttpInfo(workspace_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Reorder a custom field&#x27;s enum\n     * Moves a particular enum option to be either before or after another specified enum option in the custom field. Locked custom fields can only be reordered by the user who locked the field.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"insertEnumOptionForCustomFieldWithHttpInfo\",\n    value: function insertEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling insertEnumOptionForCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}/enum_options/insert', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Reorder a custom field&#x27;s enum\n     * Moves a particular enum option to be either before or after another specified enum option in the custom field. Locked custom fields can only be reordered by the user who locked the field.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to create.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EnumOptionData}\n     */\n  }, {\n    key: \"insertEnumOptionForCustomField\",\n    value: function insertEnumOptionForCustomField(custom_field_gid, opts) {\n      return this.insertEnumOptionForCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Update a custom field\n     * A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the &#x60;data&#x60; block will be updated; any unspecified fields will remain unchanged When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field. A custom field’s &#x60;type&#x60; cannot be updated. An enum custom field’s &#x60;enum_options&#x60; cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update &#x60;enum_options&#x60;. Locked custom fields can only be updated by the user who locked the field. Returns the complete updated custom field record.\n     * @param {String} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The custom field object with all updated properties.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"updateCustomFieldWithHttpInfo\",\n    value: function updateCustomFieldWithHttpInfo(custom_field_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'custom_field_gid' is set\n      if (custom_field_gid === undefined || custom_field_gid === null) {\n        throw new Error(\"Missing the required parameter 'custom_field_gid' when calling updateCustomField\");\n      }\n      var pathParams = {\n        'custom_field_gid': custom_field_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/custom_fields/{custom_field_gid}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Update a custom field\n     * A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the &#x60;data&#x60; block will be updated; any unspecified fields will remain unchanged When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field. A custom field’s &#x60;type&#x60; cannot be updated. An enum custom field’s &#x60;enum_options&#x60; cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update &#x60;enum_options&#x60;. Locked custom fields can only be updated by the user who locked the field. Returns the complete updated custom field record.\n     * @param {<&vendorExtensions.x-jsdoc-type>} custom_field_gid Globally unique identifier for the custom field.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The custom field object with all updated properties.\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CustomFieldResponseData}\n     */\n  }, {\n    key: \"updateCustomField\",\n    value: function updateCustomField(custom_field_gid, opts) {\n      return this.updateCustomFieldWithHttpInfo(custom_field_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Update an enum option\n     * Updates an existing enum option. Enum custom fields require at least one enabled enum option. Locked custom fields can only be updated by the user who locked the field. Returns the full record of the updated enum option.\n     * @param {String} enum_option_gid Globally unique identifier for the enum option.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to update\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"updateEnumOptionWithHttpInfo\",\n    value: function updateEnumOptionWithHttpInfo(enum_option_gid, opts) {\n      opts = opts || {};\n      var postBody = opts['body'];\n      // verify the required parameter 'enum_option_gid' is set\n      if (enum_option_gid === undefined || enum_option_gid === null) {\n        throw new Error(\"Missing the required parameter 'enum_option_gid' when calling updateEnumOption\");\n      }\n      var pathParams = {\n        'enum_option_gid': enum_option_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['application/json; charset=UTF-8'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/enum_options/{enum_option_gid}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Update an enum option\n     * Updates an existing enum option. Enum custom fields require at least one enabled enum option. Locked custom fields can only be updated by the user who locked the field. Returns the full record of the updated enum option.\n     * @param {<&vendorExtensions.x-jsdoc-type>} enum_option_gid Globally unique identifier for the enum option.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/Object} opts.body The enum option object to update\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EnumOptionData}\n     */\n  }, {\n    key: \"updateEnumOption\",\n    value: function updateEnumOption(enum_option_gid, opts) {\n      return this.updateEnumOptionWithHttpInfo(enum_option_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n  }]);\n}();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}