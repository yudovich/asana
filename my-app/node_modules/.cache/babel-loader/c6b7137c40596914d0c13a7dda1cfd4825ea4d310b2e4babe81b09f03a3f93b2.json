{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AttachmentsApi = void 0;\nvar _ApiClient = require(\"../ApiClient\");\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /*\n  * Asana\n  * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n  *\n  * OpenAPI spec version: 1.0\n  *\n  * NOTE: This class is auto generated by the swagger code generator program.\n  * https://github.com/swagger-api/swagger-codegen.git\n  *\n  * Swagger Codegen version: 3.0.54\n  *\n  * Do not edit the class manually.\n  *\n  */\nvar Collection = require('../utils/collection');\n\n/**\n* Attachments service.\n* @module api/AttachmentsApi\n* @version 3.0.4\n*/\nvar AttachmentsApi = exports.AttachmentsApi = /*#__PURE__*/function () {\n  /**\n  * Constructs a new AttachmentsApi. \n  * @alias module:api/AttachmentsApi\n  * @class\n  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n  * default to {@link module:ApiClient#instanc\n  e} if unspecified.\n  */\n  function AttachmentsApi(apiClient) {\n    _classCallCheck(this, AttachmentsApi);\n    this.apiClient = apiClient || _ApiClient.ApiClient.instance;\n  }\n\n  /**\n   * Upload an attachment\n   * Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo &amp; Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form &#x60;CRLF&#x60; or &#x60;\\\\r\\\\n&#x60; outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.\n   * @param {Object} opts Optional parameters\n   * @param {module:model/String} opts.resource_subtype \n   * @param {Blob} opts.file \n   * @param {String} opts.parent \n   * @param {String} opts.url \n   * @param {String} opts.name \n   * @param {Boolean} opts.connect_to_app \n   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n   */\n  return _createClass(AttachmentsApi, [{\n    key: \"createAttachmentForObjectWithHttpInfo\",\n    value: function createAttachmentForObjectWithHttpInfo(opts) {\n      opts = opts || {};\n      var postBody = null;\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {\n        'resource_subtype': opts['resource_subtype'],\n        'file': opts['file'],\n        'parent': opts['parent'],\n        'url': opts['url'],\n        'name': opts['name'],\n        'connect_to_app': opts['connect_to_app']\n      };\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['multipart/form-data'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/attachments', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Upload an attachment\n     * Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo &amp; Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form &#x60;CRLF&#x60; or &#x60;\\\\r\\\\n&#x60; outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.resource_subtype \n     * @param {Blob} opts.file \n     * @param {String} opts.parent \n     * @param {String} opts.url \n     * @param {String} opts.name \n     * @param {Boolean} opts.connect_to_app \n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AttachmentResponseData}\n     */\n  }, {\n    key: \"createAttachmentForObject\",\n    value: function createAttachmentForObject(opts) {\n      return this.createAttachmentForObjectWithHttpInfo(opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Delete an attachment\n     * Deletes a specific, existing attachment.  Returns an empty data record.\n     * @param {String} attachment_gid Globally unique identifier for the attachment.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"deleteAttachmentWithHttpInfo\",\n    value: function deleteAttachmentWithHttpInfo(attachment_gid) {\n      var postBody = null;\n      // verify the required parameter 'attachment_gid' is set\n      if (attachment_gid === undefined || attachment_gid === null) {\n        throw new Error(\"Missing the required parameter 'attachment_gid' when calling deleteAttachment\");\n      }\n      var pathParams = {\n        'attachment_gid': attachment_gid\n      };\n      var queryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/attachments/{attachment_gid}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Delete an attachment\n     * Deletes a specific, existing attachment.  Returns an empty data record.\n     * @param {<&vendorExtensions.x-jsdoc-type>} attachment_gid Globally unique identifier for the attachment.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmptyResponseData}\n     */\n  }, {\n    key: \"deleteAttachment\",\n    value: function deleteAttachment(attachment_gid) {\n      return this.deleteAttachmentWithHttpInfo(attachment_gid).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get an attachment\n     * Get the full record for a single attachment.\n     * @param {String} attachment_gid Globally unique identifier for the attachment.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getAttachmentWithHttpInfo\",\n    value: function getAttachmentWithHttpInfo(attachment_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'attachment_gid' is set\n      if (attachment_gid === undefined || attachment_gid === null) {\n        throw new Error(\"Missing the required parameter 'attachment_gid' when calling getAttachment\");\n      }\n      var pathParams = {\n        'attachment_gid': attachment_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/attachments/{attachment_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get an attachment\n     * Get the full record for a single attachment.\n     * @param {<&vendorExtensions.x-jsdoc-type>} attachment_gid Globally unique identifier for the attachment.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AttachmentResponseData}\n     */\n  }, {\n    key: \"getAttachment\",\n    value: function getAttachment(attachment_gid, opts) {\n      return this.getAttachmentWithHttpInfo(attachment_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get attachments from an object\n     * Returns the compact records for all attachments on the object.  There are three possible &#x60;parent&#x60; values for this request: &#x60;project&#x60;, &#x60;project_brief&#x60;, and &#x60;task&#x60;. For a project, an attachment refers to a file uploaded to the \\&quot;Key resources\\&quot; section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.  Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to &#x60;GET /attachments&#x60; for a task will return all of the images in the task, including inline images.\n     * @param {String} parent Globally unique identifier for object to fetch statuses from. Must be a GID for a &#x60;project&#x60;, &#x60;project_brief&#x60;, or &#x60;task&#x60;.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getAttachmentsForObjectWithHttpInfo\",\n    value: function getAttachmentsForObjectWithHttpInfo(parent, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'parent' is set\n      if (parent === undefined || parent === null) {\n        throw new Error(\"Missing the required parameter 'parent' when calling getAttachmentsForObject\");\n      }\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      queryParams['parent'] = parent;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/attachments', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/attachments',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/attachments', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get attachments from an object\n     * Returns the compact records for all attachments on the object.  There are three possible &#x60;parent&#x60; values for this request: &#x60;project&#x60;, &#x60;project_brief&#x60;, and &#x60;task&#x60;. For a project, an attachment refers to a file uploaded to the \\&quot;Key resources\\&quot; section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.  Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to &#x60;GET /attachments&#x60; for a task will return all of the images in the task, including inline images.\n     * @param {<&vendorExtensions.x-jsdoc-type>} parent Globally unique identifier for object to fetch statuses from. Must be a GID for a &#x60;project&#x60;, &#x60;project_brief&#x60;, or &#x60;task&#x60;.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AttachmentResponseArray}\n     */\n  }, {\n    key: \"getAttachmentsForObject\",\n    value: function getAttachmentsForObject(parent, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getAttachmentsForObjectWithHttpInfo(parent, opts);\n      }\n      return this.getAttachmentsForObjectWithHttpInfo(parent, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n  }]);\n}();","map":{"version":3,"names":["Object","defineProperty","exports","value","AttachmentsApi","_ApiClient","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","call","String","Number","Collection","apiClient","ApiClient","createAttachmentForObjectWithHttpInfo","opts","postBody","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","callApi","createAttachmentForObject","then","response_and_data","data","deleteAttachmentWithHttpInfo","attachment_gid","undefined","Error","deleteAttachment","getAttachmentWithHttpInfo","getAttachment","getAttachmentsForObjectWithHttpInfo","parent","RETURN_COLLECTION","fromApiClient","getAttachmentsForObject"],"sources":["D:/Work/asana/node_modules/asana/dist/api/AttachmentsApi.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AttachmentsApi = void 0;\nvar _ApiClient = require(\"../ApiClient\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * Asana\n * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n *\n * OpenAPI spec version: 1.0\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 3.0.54\n *\n * Do not edit the class manually.\n *\n */\nvar Collection = require('../utils/collection');\n\n/**\n* Attachments service.\n* @module api/AttachmentsApi\n* @version 3.0.4\n*/\nvar AttachmentsApi = exports.AttachmentsApi = /*#__PURE__*/function () {\n  /**\n  * Constructs a new AttachmentsApi. \n  * @alias module:api/AttachmentsApi\n  * @class\n  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n  * default to {@link module:ApiClient#instanc\n  e} if unspecified.\n  */\n  function AttachmentsApi(apiClient) {\n    _classCallCheck(this, AttachmentsApi);\n    this.apiClient = apiClient || _ApiClient.ApiClient.instance;\n  }\n\n  /**\n   * Upload an attachment\n   * Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo &amp; Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form &#x60;CRLF&#x60; or &#x60;\\\\r\\\\n&#x60; outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.\n   * @param {Object} opts Optional parameters\n   * @param {module:model/String} opts.resource_subtype \n   * @param {Blob} opts.file \n   * @param {String} opts.parent \n   * @param {String} opts.url \n   * @param {String} opts.name \n   * @param {Boolean} opts.connect_to_app \n   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n   */\n  return _createClass(AttachmentsApi, [{\n    key: \"createAttachmentForObjectWithHttpInfo\",\n    value: function createAttachmentForObjectWithHttpInfo(opts) {\n      opts = opts || {};\n      var postBody = null;\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {\n        'resource_subtype': opts['resource_subtype'],\n        'file': opts['file'],\n        'parent': opts['parent'],\n        'url': opts['url'],\n        'name': opts['name'],\n        'connect_to_app': opts['connect_to_app']\n      };\n      var authNames = ['personalAccessToken'];\n      var contentTypes = ['multipart/form-data'];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/attachments', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Upload an attachment\n     * Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo &amp; Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form &#x60;CRLF&#x60; or &#x60;\\\\r\\\\n&#x60; outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.resource_subtype \n     * @param {Blob} opts.file \n     * @param {String} opts.parent \n     * @param {String} opts.url \n     * @param {String} opts.name \n     * @param {Boolean} opts.connect_to_app \n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AttachmentResponseData}\n     */\n  }, {\n    key: \"createAttachmentForObject\",\n    value: function createAttachmentForObject(opts) {\n      return this.createAttachmentForObjectWithHttpInfo(opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Delete an attachment\n     * Deletes a specific, existing attachment.  Returns an empty data record.\n     * @param {String} attachment_gid Globally unique identifier for the attachment.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"deleteAttachmentWithHttpInfo\",\n    value: function deleteAttachmentWithHttpInfo(attachment_gid) {\n      var postBody = null;\n      // verify the required parameter 'attachment_gid' is set\n      if (attachment_gid === undefined || attachment_gid === null) {\n        throw new Error(\"Missing the required parameter 'attachment_gid' when calling deleteAttachment\");\n      }\n      var pathParams = {\n        'attachment_gid': attachment_gid\n      };\n      var queryParams = {};\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/attachments/{attachment_gid}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Delete an attachment\n     * Deletes a specific, existing attachment.  Returns an empty data record.\n     * @param {<&vendorExtensions.x-jsdoc-type>} attachment_gid Globally unique identifier for the attachment.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EmptyResponseData}\n     */\n  }, {\n    key: \"deleteAttachment\",\n    value: function deleteAttachment(attachment_gid) {\n      return this.deleteAttachmentWithHttpInfo(attachment_gid).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get an attachment\n     * Get the full record for a single attachment.\n     * @param {String} attachment_gid Globally unique identifier for the attachment.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getAttachmentWithHttpInfo\",\n    value: function getAttachmentWithHttpInfo(attachment_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'attachment_gid' is set\n      if (attachment_gid === undefined || attachment_gid === null) {\n        throw new Error(\"Missing the required parameter 'attachment_gid' when calling getAttachment\");\n      }\n      var pathParams = {\n        'attachment_gid': attachment_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/attachments/{attachment_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get an attachment\n     * Get the full record for a single attachment.\n     * @param {<&vendorExtensions.x-jsdoc-type>} attachment_gid Globally unique identifier for the attachment.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AttachmentResponseData}\n     */\n  }, {\n    key: \"getAttachment\",\n    value: function getAttachment(attachment_gid, opts) {\n      return this.getAttachmentWithHttpInfo(attachment_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get attachments from an object\n     * Returns the compact records for all attachments on the object.  There are three possible &#x60;parent&#x60; values for this request: &#x60;project&#x60;, &#x60;project_brief&#x60;, and &#x60;task&#x60;. For a project, an attachment refers to a file uploaded to the \\&quot;Key resources\\&quot; section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.  Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to &#x60;GET /attachments&#x60; for a task will return all of the images in the task, including inline images.\n     * @param {String} parent Globally unique identifier for object to fetch statuses from. Must be a GID for a &#x60;project&#x60;, &#x60;project_brief&#x60;, or &#x60;task&#x60;.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getAttachmentsForObjectWithHttpInfo\",\n    value: function getAttachmentsForObjectWithHttpInfo(parent, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'parent' is set\n      if (parent === undefined || parent === null) {\n        throw new Error(\"Missing the required parameter 'parent' when calling getAttachmentsForObject\");\n      }\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      queryParams['parent'] = parent;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/attachments', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/attachments',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/attachments', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get attachments from an object\n     * Returns the compact records for all attachments on the object.  There are three possible &#x60;parent&#x60; values for this request: &#x60;project&#x60;, &#x60;project_brief&#x60;, and &#x60;task&#x60;. For a project, an attachment refers to a file uploaded to the \\&quot;Key resources\\&quot; section in the project Overview. For a project brief, an attachment refers to inline files in the project brief itself. For a task, an attachment refers to a file directly associated to that task.  Note that within the Asana app, inline images in the task description do not appear in the index of image thumbnails nor as stories in the task. However, requests made to &#x60;GET /attachments&#x60; for a task will return all of the images in the task, including inline images.\n     * @param {<&vendorExtensions.x-jsdoc-type>} parent Globally unique identifier for object to fetch statuses from. Must be a GID for a &#x60;project&#x60;, &#x60;project_brief&#x60;, or &#x60;task&#x60;.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AttachmentResponseArray}\n     */\n  }, {\n    key: \"getAttachmentsForObject\",\n    value: function getAttachmentsForObject(parent, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getAttachmentsForObjectWithHttpInfo(parent, opts);\n      }\n      return this.getAttachmentsForObjectWithHttpInfo(parent, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n  }]);\n}();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}