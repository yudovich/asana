{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UsersApi = void 0;\nvar _ApiClient = require(\"../ApiClient\");\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /*\n  * Asana\n  * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n  *\n  * OpenAPI spec version: 1.0\n  *\n  * NOTE: This class is auto generated by the swagger code generator program.\n  * https://github.com/swagger-api/swagger-codegen.git\n  *\n  * Swagger Codegen version: 3.0.54\n  *\n  * Do not edit the class manually.\n  *\n  */\nvar Collection = require('../utils/collection');\n\n/**\n* Users service.\n* @module api/UsersApi\n* @version 3.0.4\n*/\nvar UsersApi = exports.UsersApi = /*#__PURE__*/function () {\n  /**\n  * Constructs a new UsersApi. \n  * @alias module:api/UsersApi\n  * @class\n  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n  * default to {@link module:ApiClient#instanc\n  e} if unspecified.\n  */\n  function UsersApi(apiClient) {\n    _classCallCheck(this, UsersApi);\n    this.apiClient = apiClient || _ApiClient.ApiClient.instance;\n  }\n\n  /**\n   * Get a user&#x27;s favorites\n   * Returns all of a user&#x27;s favorites in the given workspace, of the given type. Results are given in order (The same order as Asana&#x27;s sidebar).\n   * @param {String} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n   * @param {module:model/String} resource_type The resource type of favorites to be returned.\n   * @param {String} workspace The workspace in which to get favorites.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n   * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n   */\n  return _createClass(UsersApi, [{\n    key: \"getFavoritesForUserWithHttpInfo\",\n    value: function getFavoritesForUserWithHttpInfo(user_gid, resource_type, workspace, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'user_gid' is set\n      if (user_gid === undefined || user_gid === null) {\n        throw new Error(\"Missing the required parameter 'user_gid' when calling getFavoritesForUser\");\n      }\n      // verify the required parameter 'resource_type' is set\n      if (resource_type === undefined || resource_type === null) {\n        throw new Error(\"Missing the required parameter 'resource_type' when calling getFavoritesForUser\");\n      }\n      // verify the required parameter 'workspace' is set\n      if (workspace === undefined || workspace === null) {\n        throw new Error(\"Missing the required parameter 'workspace' when calling getFavoritesForUser\");\n      }\n      var pathParams = {\n        'user_gid': user_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      queryParams['resource_type'] = resource_type;\n      queryParams['workspace'] = workspace;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/users/{user_gid}/favorites', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/users/{user_gid}/favorites',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/users/{user_gid}/favorites', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a user&#x27;s favorites\n     * Returns all of a user&#x27;s favorites in the given workspace, of the given type. Results are given in order (The same order as Asana&#x27;s sidebar).\n     * @param {<&vendorExtensions.x-jsdoc-type>} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n     * @param {<&vendorExtensions.x-jsdoc-type>} resource_type The resource type of favorites to be returned.\n     * @param {<&vendorExtensions.x-jsdoc-type>} workspace The workspace in which to get favorites.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AsanaNamedResourceArray}\n     */\n  }, {\n    key: \"getFavoritesForUser\",\n    value: function getFavoritesForUser(user_gid, resource_type, workspace, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getFavoritesForUserWithHttpInfo(user_gid, resource_type, workspace, opts);\n      }\n      return this.getFavoritesForUserWithHttpInfo(user_gid, resource_type, workspace, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get a user\n     * Returns the full user record for the single user with the provided ID.\n     * @param {String} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUserWithHttpInfo\",\n    value: function getUserWithHttpInfo(user_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'user_gid' is set\n      if (user_gid === undefined || user_gid === null) {\n        throw new Error(\"Missing the required parameter 'user_gid' when calling getUser\");\n      }\n      var pathParams = {\n        'user_gid': user_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/users/{user_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a user\n     * Returns the full user record for the single user with the provided ID.\n     * @param {<&vendorExtensions.x-jsdoc-type>} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseData}\n     */\n  }, {\n    key: \"getUser\",\n    value: function getUser(user_gid, opts) {\n      return this.getUserWithHttpInfo(user_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get multiple users\n     * Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter. Results are sorted by user ID.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.workspace The workspace or organization ID to filter users on.\n     * @param {String} opts.team The team ID to filter users on.\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUsersWithHttpInfo\",\n    value: function getUsersWithHttpInfo(opts) {\n      opts = opts || {};\n      var postBody = null;\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/users',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get multiple users\n     * Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter. Results are sorted by user ID.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.workspace The workspace or organization ID to filter users on.\n     * @param {String} opts.team The team ID to filter users on.\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseArray}\n     */\n  }, {\n    key: \"getUsers\",\n    value: function getUsers(opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getUsersWithHttpInfo(opts);\n      }\n      return this.getUsersWithHttpInfo(opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get users in a team\n     * Returns the compact records for all users that are members of the team. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {String} team_gid Globally unique identifier for the team.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUsersForTeamWithHttpInfo\",\n    value: function getUsersForTeamWithHttpInfo(team_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'team_gid' is set\n      if (team_gid === undefined || team_gid === null) {\n        throw new Error(\"Missing the required parameter 'team_gid' when calling getUsersForTeam\");\n      }\n      var pathParams = {\n        'team_gid': team_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/teams/{team_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/teams/{team_gid}/users',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/teams/{team_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get users in a team\n     * Returns the compact records for all users that are members of the team. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {<&vendorExtensions.x-jsdoc-type>} team_gid Globally unique identifier for the team.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseArray}\n     */\n  }, {\n    key: \"getUsersForTeam\",\n    value: function getUsersForTeam(team_gid, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getUsersForTeamWithHttpInfo(team_gid, opts);\n      }\n      return this.getUsersForTeamWithHttpInfo(team_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get users in a workspace or organization\n     * Returns the compact records for all users in the specified workspace or organization. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {String} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUsersForWorkspaceWithHttpInfo\",\n    value: function getUsersForWorkspaceWithHttpInfo(workspace_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'workspace_gid' is set\n      if (workspace_gid === undefined || workspace_gid === null) {\n        throw new Error(\"Missing the required parameter 'workspace_gid' when calling getUsersForWorkspace\");\n      }\n      var pathParams = {\n        'workspace_gid': workspace_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/workspaces/{workspace_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/workspaces/{workspace_gid}/users',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/workspaces/{workspace_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get users in a workspace or organization\n     * Returns the compact records for all users in the specified workspace or organization. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {<&vendorExtensions.x-jsdoc-type>} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseArray}\n     */\n  }, {\n    key: \"getUsersForWorkspace\",\n    value: function getUsersForWorkspace(workspace_gid, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getUsersForWorkspaceWithHttpInfo(workspace_gid, opts);\n      }\n      return this.getUsersForWorkspaceWithHttpInfo(workspace_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n  }]);\n}();","map":{"version":3,"names":["Object","defineProperty","exports","value","UsersApi","_ApiClient","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","call","String","Number","Collection","apiClient","ApiClient","getFavoritesForUserWithHttpInfo","user_gid","resource_type","workspace","opts","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","RETURN_COLLECTION","fromApiClient","callApi","getFavoritesForUser","then","response_and_data","data","getUserWithHttpInfo","getUser","getUsersWithHttpInfo","getUsers","getUsersForTeamWithHttpInfo","team_gid","getUsersForTeam","getUsersForWorkspaceWithHttpInfo","workspace_gid","getUsersForWorkspace"],"sources":["D:/Work/asana/node_modules/asana/dist/api/UsersApi.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UsersApi = void 0;\nvar _ApiClient = require(\"../ApiClient\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * Asana\n * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).\n *\n * OpenAPI spec version: 1.0\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 3.0.54\n *\n * Do not edit the class manually.\n *\n */\nvar Collection = require('../utils/collection');\n\n/**\n* Users service.\n* @module api/UsersApi\n* @version 3.0.4\n*/\nvar UsersApi = exports.UsersApi = /*#__PURE__*/function () {\n  /**\n  * Constructs a new UsersApi. \n  * @alias module:api/UsersApi\n  * @class\n  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n  * default to {@link module:ApiClient#instanc\n  e} if unspecified.\n  */\n  function UsersApi(apiClient) {\n    _classCallCheck(this, UsersApi);\n    this.apiClient = apiClient || _ApiClient.ApiClient.instance;\n  }\n\n  /**\n   * Get a user&#x27;s favorites\n   * Returns all of a user&#x27;s favorites in the given workspace, of the given type. Results are given in order (The same order as Asana&#x27;s sidebar).\n   * @param {String} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n   * @param {module:model/String} resource_type The resource type of favorites to be returned.\n   * @param {String} workspace The workspace in which to get favorites.\n   * @param {Object} opts Optional parameters\n   * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n   * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n   * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n   */\n  return _createClass(UsersApi, [{\n    key: \"getFavoritesForUserWithHttpInfo\",\n    value: function getFavoritesForUserWithHttpInfo(user_gid, resource_type, workspace, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'user_gid' is set\n      if (user_gid === undefined || user_gid === null) {\n        throw new Error(\"Missing the required parameter 'user_gid' when calling getFavoritesForUser\");\n      }\n      // verify the required parameter 'resource_type' is set\n      if (resource_type === undefined || resource_type === null) {\n        throw new Error(\"Missing the required parameter 'resource_type' when calling getFavoritesForUser\");\n      }\n      // verify the required parameter 'workspace' is set\n      if (workspace === undefined || workspace === null) {\n        throw new Error(\"Missing the required parameter 'workspace' when calling getFavoritesForUser\");\n      }\n      var pathParams = {\n        'user_gid': user_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      queryParams['resource_type'] = resource_type;\n      queryParams['workspace'] = workspace;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/users/{user_gid}/favorites', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/users/{user_gid}/favorites',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/users/{user_gid}/favorites', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a user&#x27;s favorites\n     * Returns all of a user&#x27;s favorites in the given workspace, of the given type. Results are given in order (The same order as Asana&#x27;s sidebar).\n     * @param {<&vendorExtensions.x-jsdoc-type>} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n     * @param {<&vendorExtensions.x-jsdoc-type>} resource_type The resource type of favorites to be returned.\n     * @param {<&vendorExtensions.x-jsdoc-type>} workspace The workspace in which to get favorites.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AsanaNamedResourceArray}\n     */\n  }, {\n    key: \"getFavoritesForUser\",\n    value: function getFavoritesForUser(user_gid, resource_type, workspace, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getFavoritesForUserWithHttpInfo(user_gid, resource_type, workspace, opts);\n      }\n      return this.getFavoritesForUserWithHttpInfo(user_gid, resource_type, workspace, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get a user\n     * Returns the full user record for the single user with the provided ID.\n     * @param {String} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUserWithHttpInfo\",\n    value: function getUserWithHttpInfo(user_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'user_gid' is set\n      if (user_gid === undefined || user_gid === null) {\n        throw new Error(\"Missing the required parameter 'user_gid' when calling getUser\");\n      }\n      var pathParams = {\n        'user_gid': user_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      return this.apiClient.callApi('/users/{user_gid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get a user\n     * Returns the full user record for the single user with the provided ID.\n     * @param {<&vendorExtensions.x-jsdoc-type>} user_gid A string identifying a user. This can either be the string \\&quot;me\\&quot;, an email, or the gid of a user.\n     * @param {Object} opts Optional parameters\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseData}\n     */\n  }, {\n    key: \"getUser\",\n    value: function getUser(user_gid, opts) {\n      return this.getUserWithHttpInfo(user_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get multiple users\n     * Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter. Results are sorted by user ID.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.workspace The workspace or organization ID to filter users on.\n     * @param {String} opts.team The team ID to filter users on.\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUsersWithHttpInfo\",\n    value: function getUsersWithHttpInfo(opts) {\n      opts = opts || {};\n      var postBody = null;\n      var pathParams = {};\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/users',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get multiple users\n     * Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter. Results are sorted by user ID.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.workspace The workspace or organization ID to filter users on.\n     * @param {String} opts.team The team ID to filter users on.\n     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseArray}\n     */\n  }, {\n    key: \"getUsers\",\n    value: function getUsers(opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getUsersWithHttpInfo(opts);\n      }\n      return this.getUsersWithHttpInfo(opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get users in a team\n     * Returns the compact records for all users that are members of the team. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {String} team_gid Globally unique identifier for the team.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUsersForTeamWithHttpInfo\",\n    value: function getUsersForTeamWithHttpInfo(team_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'team_gid' is set\n      if (team_gid === undefined || team_gid === null) {\n        throw new Error(\"Missing the required parameter 'team_gid' when calling getUsersForTeam\");\n      }\n      var pathParams = {\n        'team_gid': team_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/teams/{team_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/teams/{team_gid}/users',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/teams/{team_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get users in a team\n     * Returns the compact records for all users that are members of the team. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {<&vendorExtensions.x-jsdoc-type>} team_gid Globally unique identifier for the team.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseArray}\n     */\n  }, {\n    key: \"getUsersForTeam\",\n    value: function getUsersForTeam(team_gid, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getUsersForTeamWithHttpInfo(team_gid, opts);\n      }\n      return this.getUsersForTeamWithHttpInfo(team_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n\n    /**\n     * Get users in a workspace or organization\n     * Returns the compact records for all users in the specified workspace or organization. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {String} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data and HTTP response\n     */\n  }, {\n    key: \"getUsersForWorkspaceWithHttpInfo\",\n    value: function getUsersForWorkspaceWithHttpInfo(workspace_gid, opts) {\n      opts = opts || {};\n      var postBody = null;\n      // verify the required parameter 'workspace_gid' is set\n      if (workspace_gid === undefined || workspace_gid === null) {\n        throw new Error(\"Missing the required parameter 'workspace_gid' when calling getUsersForWorkspace\");\n      }\n      var pathParams = {\n        'workspace_gid': workspace_gid\n      };\n      var queryParams = {};\n      opts = opts || {};\n      queryParams = opts;\n      var headerParams = {};\n      var formParams = {};\n      var authNames = ['personalAccessToken'];\n      var contentTypes = [];\n      var accepts = ['application/json; charset=UTF-8'];\n      var returnType = 'Blob';\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return Collection.fromApiClient(this.apiClient.callApi('/workspaces/{workspace_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType), this.apiClient, {\n          'path': '/workspaces/{workspace_gid}/users',\n          'httpMethod': 'GET',\n          'pathParams': pathParams,\n          'queryParams': queryParams,\n          'headerParams': headerParams,\n          'formParams': formParams,\n          'bodyParam': postBody,\n          'authNames': authNames,\n          'contentTypes': contentTypes,\n          'accepts': accepts,\n          'returnType': returnType\n        });\n      }\n      return this.apiClient.callApi('/workspaces/{workspace_gid}/users', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);\n    }\n\n    /**\n     * Get users in a workspace or organization\n     * Returns the compact records for all users in the specified workspace or organization. Results are sorted alphabetically and limited to 2000. For more results use the &#x60;/users&#x60; endpoint.\n     * @param {<&vendorExtensions.x-jsdoc-type>} workspace_gid Globally unique identifier for the workspace or organization.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;\n     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UserResponseArray}\n     */\n  }, {\n    key: \"getUsersForWorkspace\",\n    value: function getUsersForWorkspace(workspace_gid, opts) {\n      // Check if RETURN_COLLECTION is set and return a collection object if it is\n      if (this.apiClient.RETURN_COLLECTION) {\n        return this.getUsersForWorkspaceWithHttpInfo(workspace_gid, opts);\n      }\n      return this.getUsersForWorkspaceWithHttpInfo(workspace_gid, opts).then(function (response_and_data) {\n        return response_and_data.data;\n      });\n    }\n  }]);\n}();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}