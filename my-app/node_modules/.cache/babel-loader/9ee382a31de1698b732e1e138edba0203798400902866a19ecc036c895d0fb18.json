{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\asana\\\\my-app\\\\src\\\\taskListFromAsana.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Asana = require('asana');\nconst date = new Date();\nlet client = Asana.ApiClient.instance;\nlet token = client.authentications['token'];\ntoken.accessToken = '2/1207153187462584/1207160651338176:ae47e627318906c853675585bb006e95';\nlet tasksApiInstance = new Asana.TasksApi();\nlet opts = {\n  'limit': 5,\n  'project': \"1207158378702041\",\n  'completed_since': date,\n  'opt_fields': \"name,due_on\"\n};\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    tasksApiInstance.getTasks(opts).then(result => {\n      // Update the tasks state with the data from the API\n      setTasks(result.data);\n    }).catch(error => {\n      console.error(error.response.body);\n    });\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.name, \" - Due on: \", task.due_on]\n      }, task.gid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Asana","require","date","Date","client","ApiClient","instance","token","authentications","accessToken","tasksApiInstance","TasksApi","opts","TaskList","_s","tasks","setTasks","getTasks","then","result","data","catch","error","console","response","body","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","name","due_on","gid","_c","$RefreshReg$"],"sources":["D:/Work/asana/my-app/src/taskListFromAsana.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nconst Asana = require('asana');\r\nconst date = new Date();\r\n\r\nlet client = Asana.ApiClient.instance;\r\nlet token = client.authentications['token'];\r\ntoken.accessToken = '2/1207153187462584/1207160651338176:ae47e627318906c853675585bb006e95';\r\n\r\nlet tasksApiInstance = new Asana.TasksApi();\r\nlet opts = { \r\n    'limit': 5, \r\n    'project': \"1207158378702041\", \r\n    'completed_since': date,\r\n    'opt_fields': \"name,due_on\"\r\n};\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    tasksApiInstance.getTasks(opts)\r\n      .then((result) => {\r\n        // Update the tasks state with the data from the API\r\n        setTasks(result.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.response.body);\r\n      });\r\n  }, []); // Empty dependency array ensures useEffect runs only once\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task List</h1>\r\n      <ul>\r\n        {/* Map over the tasks array and render each task */}\r\n        {tasks.map(task => (\r\n          <li key={task.gid}>\r\n            {/* Display the task title */}\r\n            {task.name} - Due on: {task.due_on}\r\n            {/* Optionally display a completion status */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;AAEvB,IAAIC,MAAM,GAAGJ,KAAK,CAACK,SAAS,CAACC,QAAQ;AACrC,IAAIC,KAAK,GAAGH,MAAM,CAACI,eAAe,CAAC,OAAO,CAAC;AAC3CD,KAAK,CAACE,WAAW,GAAG,sEAAsE;AAE1F,IAAIC,gBAAgB,GAAG,IAAIV,KAAK,CAACW,QAAQ,CAAC,CAAC;AAC3C,IAAIC,IAAI,GAAG;EACP,OAAO,EAAE,CAAC;EACV,SAAS,EAAE,kBAAkB;EAC7B,iBAAiB,EAAEV,IAAI;EACvB,YAAY,EAAE;AAClB,CAAC;AAED,MAAMW,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACda,gBAAgB,CAACO,QAAQ,CAACL,IAAI,CAAC,CAC5BM,IAAI,CAAEC,MAAM,IAAK;MAChB;MACAH,QAAQ,CAACG,MAAM,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,QAAQ,CAACC,IAAI,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB/B,OAAA;MAAA2B,QAAA,EAEGX,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACbjC,OAAA;QAAA2B,QAAA,GAEGM,IAAI,CAACC,IAAI,EAAC,aAAW,EAACD,IAAI,CAACE,MAAM;MAAA,GAF3BF,IAAI,CAACG,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CA7BID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}